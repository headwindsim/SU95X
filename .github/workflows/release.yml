name: release
on:
  push:
    tags:
      - "v*"
      - "!v*-rc*"

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      A32NX_PRODUCTION_BUILD: 1
      MASTER_PRE_RELEASE_ID: 89410621
      MASTER_PRE_RELEASE_TAG: vstable
      RELEASE_ZIP_NAME: headwindsim-aircraft-su100-95-stable.zip
      BUILD_DIR_NAME: stable
    steps:
      - name: Checkout source
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Create .env file
        run: |
          echo A32NX_PRODUCTION_BUILD=1 >> .env
          echo CLIENT_ID=${{ secrets.NAVIGRAPH_CLIENT_ID }} >> .env
          echo CLIENT_SECRET=${{ secrets.NAVIGRAPH_CLIENT_SECRET }} >> .env
          echo CHARTFOX_SECRET=${{ secrets.CHARTFOX_SECRET }} >> .env
          echo BUILD_DIR_NAME=${{ env.BUILD_DIR_NAME }} >> .env
      - name: Setup Package
        run: |
          ./scripts/dev-env/run.sh ./scripts/setup.sh
      - name: Copy Sources
        run: |
          ./scripts/copy.sh
      - name: Build SU95X Package
        run: |
          ./scripts/dev-env/run.sh ./scripts/build.sh --no-tty -j 4
      - name: Build ZIP file
        run: |
          ./scripts/dev-env/run.sh node ./scripts/fragment.js

          cp ./build-su95x/out/build-modules/modules.json ./build-su95x/out/headwindsim-aircraft-su100-95/install.json
          ./scripts/dev-env/run.sh node ./scripts/install-source.js
          mkdir ./${{ env.BUILD_DIR_NAME }}
          cd ./build-su95x/out/
          zip -r ../../${{ env.BUILD_DIR_NAME }}/${{ env.RELEASE_ZIP_NAME }} ./headwindsim-aircraft-su100-95/
          cd ../../
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload release asset
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ env.BUILD_DIR_NAME }}/${{ env.RELEASE_ZIP_NAME }}
          asset_name: ${{ env.RELEASE_ZIP_NAME }}
          asset_content_type: application/zip
      - name: Delete old release assets
        uses: mknejp/delete-release-assets@v1
        with:
          token: ${{ github.token }}
          tag: ${{ env.MASTER_PRE_RELEASE_TAG }}
          assets: "*"
      - name: Upload Assets to vstable
        uses: dwenegar/upload-release-assets@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          release_id: ${{ env.MASTER_PRE_RELEASE_ID }}
          assets_path: ./build-su95x/out/build-modules/
      - name: Update vstable pre-release body
        run: |
          curl --request PATCH \
            --url 'https://api.github.com/repos/${{ github.repository }}/releases/${{ env.MASTER_PRE_RELEASE_ID }}' \
            --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
            --header 'Content-Type: application/json' \
            --data-raw '{
              "body": "This pre-release has its asset updated on every release\nLast updated on ${{ env.BUILT_DATE_TIME }} from commit ${{ github.sha }}\nThis link will always point to the latest stable build: https://github.com/${{ github.repository }}/releases/download/${{ env.MASTER_PRE_RELEASE_TAG }}/full.zip"
            }'
