name: experimental
on:
  push:
    branches:
      - experimental

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      A32NX_PRODUCTION_BUILD: 1
      A32NX_INSTRUMENTS_BUILD_WORKERS: 2
      EXP_PRE_RELEASE_ID: 89410394
      EXP_PRE_RELEASE_TAG: vexp
      EXP_ZIP_NAME: headwindsim-aircraft-su100-95-experimental.zip
      BUILD_DIR_NAME: vexp
    steps:
      - name: Checkout source
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Set BUILT_DATE_TIME
        run: echo "BUILT_DATE_TIME=$(date -u -Iseconds)" >> $GITHUB_ENV
      - name: Create .env file
        run: |
          echo A32NX_PRODUCTION_BUILD=1 >> .env
          echo CLIENT_ID=${{ secrets.NAVIGRAPH_CLIENT_ID }} >> .env
          echo CLIENT_SECRET=${{ secrets.NAVIGRAPH_CLIENT_SECRET }} >> .env
          echo CHARTFOX_SECRET=${{ secrets.CHARTFOX_SECRET }} >> .env
          echo SENTRY_DSN=${{ secrets.SENTRY_DSN }} >> .env
          echo BUILD_DIR_NAME=${{ env.BUILD_DIR_NAME }} >> .env
      - name: Setup Package
        run: |
          ./scripts/dev-env/run.sh ./scripts/setup.sh
      - name: Copy Sources
        run: |
<<<<<<< experimental
          ./scripts/copy_git.sh
      - name: Cleanup redundant files
        run: |
          rm -rf ./hbw-su95x/src
          rm -rf ./src/base
          rm -rf ./src/fbw_a320
          rm -rf ./src/fadec/a320_fadec
=======
          ./scripts/dev-env/run.sh ./scripts/copy_git.sh
>>>>>>> Remove permission command to workflow
      - name: Build SU95X Package
        run: |
          ./scripts/dev-env/run.sh ./scripts/build.sh --no-tty -j 4
      - name: Cleanup
        run: |
          rm -rf ./src
      - name: Build ZIP files
        run: |
          ./scripts/dev-env/run.sh node ./scripts/fragment.js

          cp ./build-modules/modules.json ./hdw-su95x/out/headwindsim-aircraft-su100-95/install.json
          ./scripts/dev-env/run.sh node ./scripts/install-source.js
          mkdir ./${{ env.BUILD_DIR_NAME }}
          cd ./hdw-su95x/out/
          zip -r ../../${{ env.BUILD_DIR_NAME }}/${{ env.EXP_ZIP_NAME }} ./headwindsim-aircraft-su100-95/
          cd ../../
      - name: Delete old release assets
        uses: mknejp/delete-release-assets@v1
        with:
          token: ${{ github.token }}
          tag: ${{ env.EXP_PRE_RELEASE_TAG }}
          assets: "*"
          fail-if-no-assets: false
      - name: Upload main zip asset to vexp release
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: https://uploads.github.com/repos/${{ github.repository }}/releases/${{ env.EXP_PRE_RELEASE_ID }}/assets{?name,label}
          asset_path: ./${{ env.BUILD_DIR_NAME }}/${{ env.EXP_ZIP_NAME }}
          asset_name: ${{ env.EXP_ZIP_NAME }}
          asset_content_type: application/zip
      - name: Upload fragment assets to vexp release
        uses: dwenegar/upload-release-assets@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          release_id: ${{ env.EXP_PRE_RELEASE_ID }}
          assets_path: ./build-modules/
      - name: Update vexp release body
        run: |
          curl --request PATCH \
            --url 'https://api.github.com/repos/${{ github.repository }}/releases/${{ env.EXP_PRE_RELEASE_ID }}' \
            --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
            --header 'Content-Type: application/json' \
            --data-raw '{
              "body": "This release has its asset updated on every commit to the experimental branch\nLast updated on ${{ env.BUILT_DATE_TIME }} from commit ${{ github.sha }}\nThis link will always point to the latest main build: https://github.com/${{ github.repository }}/releases/download/${{ env.EXP_PRE_RELEASE_TAG }}/${{ env.EXP_ZIP_NAME }}"
            }'
